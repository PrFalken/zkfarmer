#!/usr/bin/env python
#
# This file is part of the zkfarmer package.
# (c) Olivier Poitrey <rs@dailymotion.com>
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')

from zkfarmer.conf import Conf
from zkfarmer import ZkFarmer
import zookeeper
import logging


def main():
    from zktools.connection import ZkConnection
    import argparse
    from signal import signal, SIGTERM, SIGINT

    parser = argparse.ArgumentParser(description='Register the current host as a node of a service defined by a zookeeper node path on ' +
                                     'one side and export the farm node list into a configuration file on the other side. ' +
                                     'Additionnaly, each node can carry its own configuration.',
                                     epilog='All your farms are belong to us')

    parser.add_argument('-H', '--host', dest='host', default=os.environ.get('ZKHOST', 'localhost:2181'),
                        help='list of zookeeper hosts:port sperated by commas')
    group = parser.add_mutually_exclusive_group()
    group.add_argument('-q', '--quiet', dest='quiet', action='store_true',
                       help='lower the log level so only warnings and errors are logged')
    group.add_argument('-v', '--verbose', dest='verbose', action='store_true',
                       help='raise the log level to DEBUG')

    subparsers = parser.add_subparsers(title='subcommands', dest='command')
    subparsers.add_parser('join')

    join_parser = subparsers.add_parser('join', help='make the current host to join a farm')
    join_parser.add_argument('zknode', help='the ZooKeeper node path of the farm')
    join_parser.add_argument('conf', help='Path to the node configuration')
    join_parser.add_argument('-f', '--format', dest='format', choices=['json', 'php', 'dir'],
                             help='set the configuration format (supported formats: json, php, dir)')

    export_parser = subparsers.add_parser('export', help='exports and maintain a representation of the current farm status to a local configuration file')
    export_parser.add_argument('zknode', help='the ZooKeeper node path of the farm')
    export_parser.add_argument('conf', help='path to the local configuration')
    export_parser.add_argument('-f', '--format', dest='format', choices=['json', 'php', 'dir'],
                               help='set the configuration format (supported formats: json, php, dir)')

    args = parser.parse_args()

    if args.zknode and args.zknode[0] is not "/":
        parser.error('First argument must be the full path to the zookeeper node to create (eg: /services/db)')

    if args.verbose:
        level = logging.DEBUG
        zookeeper.set_debug_level(zookeeper.LOG_LEVEL_DEBUG)
    elif args.quiet:
        level = logging.WARN
        zookeeper.set_debug_level(zookeeper.LOG_LEVEL_WARN)
    else:
        level = logging.INFO
        zookeeper.set_debug_level(zookeeper.LOG_LEVEL_INFO)

    logging.basicConfig(level=level, format='%(asctime)s %(levelname)s %(message)s')

    try:
        conf = Conf(args.conf, args.format)
    except ValueError, e:
        parser.error(e)
        exit(1)

    zkconn = ZkConnection(host=args.host)

    def sighandler(sig, frame):
        zkconn.close()
        exit()

    signal(SIGTERM, sighandler)
    signal(SIGINT, sighandler)

    farmer = ZkFarmer(zkconn)

    if args.command == 'export':
        farmer.export(conf, args.zknode)
    elif args.command == 'join':
        farmer.join(conf, args.zknode)
    else:
        parser.error('Unsupported command: %s' % args.command)


if __name__ == "__main__":
    main()
